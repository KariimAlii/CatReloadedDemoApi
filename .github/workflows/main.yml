name: Deploy to Monster ASP

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  DOTNET_VERSION: '8.0.x'
  PROJECT_NAME: 'YourApiProjectName'  # Replace with your actual project name
  PUBLISH_FOLDER: './publish'

jobs:
  build-and-deploy:
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v4
    
    # Set up .NET
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.0'

    # 1. Force IIS to release locks
    - name: Activate Maintenance Mode
      run: |
        # Create 1KB+ app_offline.htm (IIS requirement)
        fsutil file createnew app_offline.tmp 1024
        curl -T app_offline.tmp ftp://site33211.siteasp.net/wwwroot/app_offline.htm -u "site33211:${{ secrets.FTP_PASSWORD }}"
        Start-Sleep -Seconds 30  # Wait for IIS to fully release files

    # Restore dependencies
    - name: Restore dependencies
      run: dotnet restore
    
    # Build the project
    - name: Build
      run: dotnet build --configuration Release --no-restore
    
    # Publish to folder
    - name: Publish
      run: dotnet publish ./External-API-Integration.csproj -c Release -o ./publish/ --no-build

    - name: FTP Deploy
      uses: SamKirkland/FTP-Deploy-Action@v4.3.0
      with:
        server: ${{ secrets.FTP_SERVER }}
        username: ${{ secrets.FTP_USERNAME }}
        password: ${{ secrets.FTP_PASSWORD }}
        port: 21
        local-dir: ./publish/
        server-dir: ./wwwroot/  # Monster ASP's directory
        dangerous-clean-slate: false  # Safety flag
        retry-count: 3
        retry-wait-time: 15000  # 15s between retries

    # Verify DLLs updated
    - name: Check DLL Deployment
      run: |
        $files = @("External-API-Integration.dll", "YourApp.Main.dll")
        foreach ($file in $files) {
          $size = (curl -I ftp://site33211.siteasp.net/wwwroot/bin/$file -u "site33211:${{ secrets.FTP_PASSWORD }}" | Select-String "Content-Length").ToString().Split(":")[1].Trim()
          if ([int]$size -lt 10KB) { throw "$file update failed!" }
        }

    # Restore application
    - name: Disable Maintenance Mode
      run: |
        curl -Q "DELE wwwroot/app_offline.htm" ftp://site33211.siteasp.net -u "site33211:${{ secrets.FTP_PASSWORD }}"
        Start-Sleep -Seconds 10  # Wait for app pool restart

    - name: Verify Site Online
      run: |
        $retry = 0
        while ($retry -lt 5) {
          try {
            $status = (Invoke-WebRequest -Uri "https://techxexpress.runasp.net" -SkipCertificateCheck -Method Head).StatusCode
            if ($status -eq 200) { exit 0 }
          } catch { }
          Start-Sleep -Seconds 10
          $retry++
        }
        throw "Application failed to start"
